name: CI/CD Pipeline
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  continuous-integration:
    runs-on: ubuntu-latest
    steps:
      - name: check out code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: grant permissions
        run : chmod +x gradlew

      - name: Run tests without integration and repository tests
        run: ./gradlew clean build -DincludeIntegrationTestAndRepositoryTest=false


  deploy-to-qa:
    runs-on: ubuntu-latest
    environment: QA
    needs: [ continuous-integration ]
    if: github.ref == 'refs/heads/main'
    steps:
      # Step 1
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      # Step 2
      - name: Create CodeDeploy Deployment
        id: deploy
        run: |
          aws deploy create-deployment \
            --application-name GDHI-Backend-v2 \
            --deployment-group-name GDHI-Backend-v2-QA \
            --deployment-config-name CodeDeployDefault.OneAtATime \
            --github-location repository=${{ github.repository }},commitId=${{ github.sha }} \
            --ignore-application-stop-failures
            

  deploy-to-showcase:
    runs-on: ubuntu-latest
    environment: SHOWCASE
    needs: [ deploy-to-qa ]
    if: github.ref == 'refs/heads/main'
    steps:
      # Step 1
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      # Step 2
      - name: Create CodeDeploy Deployment
        id: deploy
        run: |
          aws deploy create-deployment \
            --application-name GDHI-Backend-v2 \
            --deployment-group-name GDHI-Backend-v2-Showcase \
            --deployment-config-name CodeDeployDefault.OneAtATime \
            --github-location repository=${{ github.repository }},commitId=${{ github.sha }} \
            --ignore-application-stop-failures  

  deploy-to-prod:
    runs-on: ubuntu-latest
    environment: PROD
    needs: [ deploy-to-showcase ]
    if: github.ref == 'refs/heads/main'
    steps:
      # Step 1
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Upload Artifact to s3
        working-directory: ${{ env.applicationfolder }}/target
        run: aws s3 cp *.war s3://${{ env.S3BUCKET }}/

      # Step 3
      - name: Create CodeDeploy Deployment
        id: deploy
        run: |
          aws deploy create-deployment \
            --application-name GDHI-Backend-v2 \
            --deployment-group-name GDHI-Backend-v2-Prod \
            --deployment-config-name CodeDeployDefault.OneAtATime \
            --github-location repository=${{ github.repository }},commitId=${{ github.sha }} \
            --ignore-application-stop-failures